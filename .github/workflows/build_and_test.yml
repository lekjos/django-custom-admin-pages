name: Build & Test

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - uses: Gr1N/setup-poetry@v8
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - name: Restore Poetry cache
      run: poetry config virtualenvs.create false
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry --version
        poetry install --with dev
    - name: Analyze Code with Pylint
      run: |
        poetry run pylint --load-plugins=pylint_django ./django_custom_admin_pages/
    - name: Analyzing code with black
      run: |
        poetry run black . --check
    - name: Analyzing code with isort
      run: |
        poetry run isort . --check-only

  test:
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Run tox python ${{ matrix.python-version }}
      run: |
        tox

  upload-codecov:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .coverage,coverage.xml

      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
